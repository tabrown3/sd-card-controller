
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module sd_card_controller_top_level(

	//////////// CLOCK //////////
	CLOCK_50,

	//////////// KEY //////////
	KEY,

	//////////// SW //////////
	SW,

	//////////// SDRAM //////////
	DRAM_ADDR,
	DRAM_BA,
	DRAM_CAS_N,
	DRAM_CKE,
	DRAM_CLK,
	DRAM_CS_N,
	DRAM_DQ,
	DRAM_DQM,
	DRAM_RAS_N,
	DRAM_WE_N,

	//////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
	bottom,
	bottom_IN 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;

//////////// KEY //////////
input 		     [1:0]		KEY;

//////////// SW //////////
input 		     [3:0]		SW;

//////////// SDRAM //////////
output		    [12:0]		DRAM_ADDR;
output		     [1:0]		DRAM_BA;
output		          		DRAM_CAS_N;
output		          		DRAM_CKE;
output		          		DRAM_CLK;
output		          		DRAM_CS_N;
inout 		    [15:0]		DRAM_DQ;
output		     [1:0]		DRAM_DQM;
output		          		DRAM_RAS_N;
output		          		DRAM_WE_N;

//////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
inout 		    [33:0]		bottom;
input 		     [1:0]		bottom_IN;


//=======================================================
//  REG/WIRE declarations
//=======================================================


reg op_code = 1'b0;
reg execute = 1'b0;
reg [25:0] block_address = {26{1'b0}};
reg [7:0] outgoing_byte = 8'h00;
wire clk;
wire [7:0] incoming_byte;
wire finished_byte;
wire finished_block;
wire busy;
wire debug_clk;
wire miso;

//=======================================================
//  Structural coding
//=======================================================

assign miso = bottom[5];
assign bottom[5] = 1'bz;

sd_card_pll PLL0(
    .inclk0(CLOCK_50),
    .c0(clk),
    .c1(debug_clk)
);

sd_card_controller SDCC0 (
    .op_code(op_code),
    .execute(!KEY[1]),
    .clk(clk),
    .block_address(block_address),
    .miso(miso), // weak pull-up enabled
    .outgoing_byte(outgoing_byte),
	.btn(KEY[0]),
    .cs(bottom[0]),
    .incoming_byte(incoming_byte),
    .mosi(bottom[1]),
    .finished_byte(finished_byte),
    .finished_block(finished_block),
    .spi_clk(bottom[3]),
    .busy(busy)
);

endmodule
